@incollection{head_tonewars_2014,
    year={2014},
    isbn={978-3-319-07220-3},
    booktitle={Intelligent Tutoring Systems},
    volume={8474},
    series={Lecture Notes in Computer Science},
    editor={Trausan-Matu, Stefan and Boyer, KristyElizabeth and Crosby, Martha and Panourgia, Kitty},
    doi={10.1007/978-3-319-07221-0_46},
    title={ToneWars: Connecting Language Learners and Native Speakers through Collaborative Mobile Games},
    url={http://dx.doi.org/10.1007/978-3-319-07221-0_46},
    publisher={Springer International Publishing},
    keywords={Mobile Learning; Serious Games; Crowdsourcing; Collaborative Learning},
    author={Head, Andrew and Xu, Yi and Wang, Jingtao},
    pages={368-377},
    language={English}
}

@article{hartmann_hacking_2008,
	title = {Hacking, mashing, gluing: {Understanding} opportunistic design},
	volume = {7},
	shorttitle = {Hacking, mashing, gluing},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4563909},
	number = {3},
	urldate = {2015-02-17},
	journal = {Pervasive Computing, IEEE},
	author = {Hartmann, Bjorn and Doorley, Scott and Klemmer, Scott R.},
	year = {2008},
	pages = {46--54},
	file = {[PDF] from bjoern.org:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/X9HNTFB2/Hartmann et al. - 2008 - Hacking, mashing, gluing Understanding opportunis.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/MEMIIEPD/login.html:text/html}
}

@inproceedings{brandt_two_2009,
	address = {New York, NY, USA},
	series = {{CHI} '09},
	title = {Two {Studies} of {Opportunistic} {Programming}: {Interleaving} {Web} {Foraging}, {Learning}, and {Writing} {Code}},
	isbn = {978-1-60558-246-7},
	shorttitle = {Two {Studies} of {Opportunistic} {Programming}},
	url = {http://doi.acm.org/10.1145/1518701.1518944},
	doi = {10.1145/1518701.1518944},
	abstract = {This paper investigates the role of online resources in problem solving. We look specifically at how programmers - an exemplar form of knowledge workers - opportunistically interleave Web foraging, learning, and writing code. We describe two studies of how programmers use online resources. The first, conducted in the lab, observed participants' Web use while building an online chat room. We found that programmers leverage online resources with a range of intentions: They engage in just-in-time learning of new skills and approaches, clarify and extend their existing knowledge, and remind themselves of details deemed not worth remembering. The results also suggest that queries for different purposes have different styles and durations. Do programmers' queries "in the wild" have the same range of intentions, or is this result an artifact of the particular lab setting? We analyzed a month of queries to an online programming portal, examining the lexical structure, refinements made, and result pages visited. Here we also saw traits that suggest the Web is being used for learning and reminding. These results contribute to a theory of online resource usage in programming, and suggest opportunities for tools to facilitate online knowledge work.},
	urldate = {2014-11-18},
	booktitle = {Proceedings of the {SIGCHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {ACM},
	author = {Brandt, Joel and Guo, Philip J. and Lewenstein, Joel and Dontcheva, Mira and Klemmer, Scott R.},
	year = {2009},
	keywords = {copy-and-paste, opportunistic programming, prototyping},
	pages = {1589--1598},
	file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/CBGX4K6H/Brandt et al. - 2009 - Two Studies of Opportunistic Programming Interlea.pdf:application/pdf}
}

@inproceedings{dorn_learning_2010,
	address = {New York, NY, USA},
	series = {{CHI} '10},
	title = {Learning on the {Job}: {Characterizing} the {Programming} {Knowledge} and {Learning} {Strategies} of {Web} {Designers}},
	isbn = {978-1-60558-929-9},
	shorttitle = {Learning on the {Job}},
	url = {http://doi.acm.org/10.1145/1753326.1753430},
	doi = {10.1145/1753326.1753430},
	abstract = {This paper reports on a study of professional web designers and developers. We provide a detailed characterization of their knowledge of fundamental programming concepts elicited through card sorting. Additionally, we present qualitative findings regarding their motivation to learn new concepts and the learning strategies they employ. We find a high level of recognition of basic concepts, but we identify a number of concepts that they do not fully understand, consider difficult to learn, and use infrequently. We also note that their learning process is motivated by work projects and often follows a pattern of trial and error. We conclude with implications for end-user programming researchers.},
	urldate = {2015-01-20},
	booktitle = {Proceedings of the {SIGCHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {ACM},
	author = {Dorn, Brian and Guzdial, Mark},
	year = {2010},
	keywords = {informal learning, web development},
	pages = {703--712},
	file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/D2RGT2UC/Dorn and Guzdial - 2010 - Learning on the Job Characterizing the Programmin.pdf:application/pdf}
}

@inproceedings{clarke_what_2007,
	address = {Dagstuhl, Germany},
	series = {Dagstuhl {Seminar} {Proceedings}},
	title = {What is an {End} {User} {Software} {Engineer}?},
	url = {http://drops.dagstuhl.de/opus/volltexte/2007/1080},
	booktitle = {End-{User} {Software} {Engineering}},
	publisher = {Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik, Germany},
	author = {Clarke, Steven},
	editor = {Burnett, Margaret H. and Engels, Gregor and Myers, Brad A. and Rothermel, Gregg},
	year = {2007},
	annote = {Keywords: Personas, End user software engineer, Professional software engineer},
	file = {07081.ClarkeSteven.Paper.1080.pdf:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/4F64NSJN/07081.ClarkeSteven.Paper.1080.pdf:application/pdf}
}


@inproceedings{brandt_opportunistic_2008,
	address = {New York, NY, USA},
	series = {{WEUSE} '08},
	title = {Opportunistic {Programming}: {How} {Rapid} {Ideation} and {Prototyping} {Occur} in {Practice}},
	isbn = {978-1-60558-034-0},
	shorttitle = {Opportunistic {Programming}},
	url = {http://doi.acm.org/10.1145/1370847.1370848},
	doi = {10.1145/1370847.1370848},
	abstract = {At times, programmers work opportunistically, emphasizing speed and ease of development over code robustness and maintainability. They do this to prototype, ideate, and discover; to understand as quickly as possible what the right solution is. Despite its importance, opportunistic programming remains poorly understood when compared with traditional software engineering. Through fieldwork and a laboratory study, we observed five characteristics of opportunistic programming: Programmers build software from scratch using high-level tools, often add new functionality via copy-and-paste, iterate more rapidly than in traditional development, consider code to be impermanent, and face unique debugging challenges because their applications often comprise many languages and tools composed without upfront design. Based on these characteristics, we discuss future research on tools for debugging, code foraging and reuse, and documentation that are specifically targeted at this style of development.},
	urldate = {2015-09-27},
	booktitle = {Proceedings of the 4th {International} {Workshop} on {End}-user {Software} {Engineering}},
	publisher = {ACM},
	author = {Brandt, Joel and Guo, Philip J. and Lewenstein, Joel and Klemmer, Scott R.},
	year = {2008},
	keywords = {end-user software engineering, opportunistic programming, prototyping},
	pages = {1--5},
	file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/J6QBBE4M/Brandt et al. - 2008 - Opportunistic Programming How Rapid Ideation and .pdf:application/pdf}
}


@article{ko_state_2011,
	title = {The state of the art in end-user software engineering},
	volume = {43},
	url = {http://dl.acm.org/citation.cfm?id=1922658},
	number = {3},
	urldate = {2015-02-09},
	journal = {ACM Computing Surveys (CSUR)},
	author = {Ko, Andrew J. and Abraham, Robin and Beckwith, Laura and Blackwell, Alan and Burnett, Margaret and Erwig, Martin and Scaffidi, Chris and Lawrance, Joseph and Lieberman, Henry and Myers, Brad and {others}},
	year = {2011},
	pages = {21},
	file = {[PDF] from psu.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/MM763X4P/Ko et al. - 2011 - The state of the art in end-user software engineer.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/7T3N9WIB/citation.html:text/html}
}


@article{parnin_crowd_2012,
	title = {Crowd documentation: {Exploring} the coverage and the dynamics of {API} discussions on {Stack} {Overflow}},
	shorttitle = {Crowd documentation},
	url = {http://scholar.google.com/scholar?cluster=2302637666521001017&hl=en&oi=scholarr},
	urldate = {2015-01-21},
	journal = {Georgia Institute of Technology, Tech. Rep},
	author = {Parnin, Chris and Treude, Christoph and Grammel, Lars and Storey, Margaret-Anne},
	year = {2012},
	file = {[PDF] from gatech.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/2BPTKHP7/Parnin et al. - 2012 - Crowd documentation Exploring the coverage and th.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/G6TM7QIT/scholar.html:text/html}
}


@inproceedings{ko_role_2011,
	title = {The role of conceptual knowledge in {API} usability},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6070395},
	urldate = {2015-02-28},
	booktitle = {Visual {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC}), 2011 {IEEE} {Symposium} on},
	publisher = {IEEE},
	author = {Ko, Andrew J. and Riche, Yann},
	year = {2011},
	pages = {173--176},
	file = {[PDF] from washington.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/TDK9AX6H/Ko and Riche - 2011 - The role of conceptual knowledge in API usability.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/GR36RSR4/cookiedetectresponse.html:text/html}
}


@inproceedings{ko_six_2004,
	title = {Six {Learning} {Barriers} in {End}-{User} {Programming} {Systems}},
	doi = {10.1109/VLHCC.2004.47},
	abstract = {As programming skills increase in demand and utility, the learnability of end-user programming systems is of utmost importance. However, research on learning barriers in programming systems has primarily focused on languages, overlooking potential barriers in the environment and accompanying libraries. To address this, a study of beginning programmers learning Visual Basic.NET was performed. This identified six types of barriers: design, selection, coordination, use, understanding, and information. These barriers inspire a new metaphor of computation, which provides a more learner-centric view of programming system design},
	booktitle = {2004 {IEEE} {Symposium} on {Visual} {Languages} and {Human} {Centric} {Computing}},
	author = {Ko, A.J. and Myers, B.A. and Aung, H.H.},
	month = sep,
	year = {2004},
	keywords = {beginning programmers, Computer languages, computer science education, end-user programming systems, Feedback, learnability, learning barriers, Libraries, Manufacturing, programming environments, Programming profession, programming skills, programming system design, Prototypes, Robot control, Robot kinematics, Robot programming, Utility programs, Visual BASIC, Visual Basic.NET},
	pages = {199--206},
	file = {IEEE Xplore Abstract Record:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/NJKAZA9C/login.html:text/html;six_barriers.pdf:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/G8CGCDDS/six_barriers.pdf:application/pdf}
}


@inproceedings{savage_lamello_2015,
	address = {New York, NY, USA},
	series = {{CHI} '15},
	title = {Lamello: {Passive} {Acoustic} {Sensing} for {Tangible} {Input} {Components}},
	isbn = {978-1-4503-3145-6},
	shorttitle = {Lamello},
	url = {http://doi.acm.org/10.1145/2702123.2702207},
	doi = {10.1145/2702123.2702207},
	abstract = {We describe Lamello, an approach for creating tangible input components that recognize user interaction via passive acoustic sensing. Lamello employs comb-like structures with varying-length tines at interaction points (e.g., along slider paths). Moving a component generates tine strikes; a real-time audio processing pipeline analyzes the resultant sounds and emits high-level interaction events. Our main contributions are in the co-design of the tine structures, information encoding schemes, and audio analysis. We demonstrate 3D printed Lamello-powered buttons, sliders, and dials.},
	urldate = {2015-04-23},
	booktitle = {Proceedings of the 33rd {Annual} {ACM} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {ACM},
	author = {Savage, Valkyrie and Head, Andrew and Hartmann, Björn and Goldman, Dan B. and Mysore, Gautham and Li, Wilmot},
	year = {2015},
	keywords = {3d printing, sound, tangible interaction},
	pages = {1277--1280},
	file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/MR8KX5N3/Savage et al. - 2015 - Lamello Passive Acoustic Sensing for Tangible Inp.pdf:application/pdf}
}

@article{farkas_layering_1998,
	title = {Layering as a safety net for minimalist documentation},
	url = {http://books.google.com/books?hl=en&lr=&id=LvXiZJEUJjAC&oi=fnd&pg=PA247&dq=info:EVDuP_CWRBwJ:scholar.google.com&ots=1ljA7M9iBm&sig=SvqlwOzG3zzMF_ZRMJXjjsjn5yU},
	urldate = {2015-03-20},
	journal = {Minimalism Beyond the Nurnberg Funnel. The MIT Press, Cambridge},
	author = {Farkas, David K.},
	year = {1998},
	pages = {247--274},
	file = {[PDF] from washington.edu:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/4REK4G2H/Farkas - 1998 - Layering as a safety net for minimalist documentat.pdf:application/pdf;Snapshot:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/TGQ9IITA/books.html:text/html}
}

@book{carroll_nurnberg_1990,
	title = {The {Nurnberg} funnel: designing minimalist instruction for practical computer skill},
	shorttitle = {The {Nurnberg} funnel},
	url = {http://tocs.ulb.tu-darmstadt.de/25047507.pdf},
	urldate = {2015-03-05},
	publisher = {MIT press Cambridge, MA},
	author = {Carroll, John Millar},
	year = {1990}
}


@inproceedings{burnett_future_2014,
	address = {New York, NY, USA},
	series = {{FOSE} 2014},
	title = {Future of {End}-user {Software} {Engineering}: {Beyond} the {Silos}},
	isbn = {978-1-4503-2865-4},
	shorttitle = {Future of {End}-user {Software} {Engineering}},
	url = {http://doi.acm.org/10.1145/2593882.2593896},
	doi = {10.1145/2593882.2593896},
	abstract = {End-user software engineering (EUSE) is a research area that aims to invent new kinds of technologies that collaborate with end users to improve the quality of their software. The practice that EUSE research aims to support is end users using new tools and methods to improve the quality of the software that they and other end users have created. There is a need for this outcome because research shows both that the number of end users creating their own software greatly exceeds the number of professional software developers, and that the software they create is riddled with errors. In this paper, we describe the present state of EUSE, and challenges in moving forward toward a bright future. We show how the future of EUSE may become over-siloed, restricting future researchers' vision of what can be achieved. We then show that focusing on the in-the-moment intents of end-user developers can be used to derive a number of promising directions forward for EUSE researchers, and how theories can help us further de-silo future EUSE research. Finally, we discuss how overcoming challenges for the future of end-user software engineering may also bring direct benefits to the future of "classic" software engineering.},
	urldate = {2015-04-23},
	booktitle = {Proceedings of the on {Future} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Burnett, Margaret M. and Myers, Brad A.},
	year = {2014},
	keywords = {end-user development, End-user software engineering (EUSE)},
	pages = {201--211},
	file = {p201-burnett.pdf:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/MGAID7HB/p201-burnett.pdf:application/pdf}
}

@incollection{blackwell_psychological_2006,
	year={2006},
	isbn={978-1-4020-4220-1},
	booktitle={End User Development},
	volume={9},
	series={Human-Computer Interaction Series},
	editor={Lieberman, Henry and PaternÃ², Fabio and Wulf, Volker},
	doi={10.1007/1-4020-5386-X_2},
	title={Psychological Issues in End-User Programming},
	url={http://dx.doi.org/10.1007/1-4020-5386-X_2},
	publisher={Springer Netherlands},
	author={Blackwell, AlanF.},
	pages={9-30},
	language={English}
}


@inproceedings{head_tutorons_2015,
	address = {Atlanta, GA, USA},
	title = {Tutorons: {Generating} {Context}-{Relevant}, {On}-{Demand} {Explanations} and {Demonstrations} of {Online} {Code}},
	abstract = {Programmers frequently turn to the web to solve problems and find example code. For the sake of brevity, the snippets in online instructions often gloss over the syntax of languages like CSS selectors and Unix commands. Programmers must compensate by consulting external documentation. In this paper, we propose language-specific routines called Tutorons that automatically generate context-relevant, on-demand micro- explanations of code. A Tutoron detects explainable code in a web page, parses it, and generates in-situ natural language explanations and demonstrations of code. We build Tutorons for CSS selectors, regular expressions, and the Unix command “wget”. We demonstrate techniques for generating natural language explanations through template instantiation, synthesizing code demonstrations by parse tree traversal, and building compound explanations of co-occurring options. Through a qualitative study, we show that Tutoron-generated explanations can reduce the need for reference documentation in code modification tasks.},
	booktitle = {Visual {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC}), 2015 {IEEE} {Symposium} on},
	author = {Head, Andrew and Appachu, Codanda and Hearst, Marti A. and Hartmann, Björn},
	year = {2015},
	keywords = {3d printing, sound, tangible interaction}
}
